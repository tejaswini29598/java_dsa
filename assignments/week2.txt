1.why the main() method is static?
2.definition and declaration
3.which string objects in java are not stored in string pool(String pool is a storage space in the Java heap memory where string literals are stored)
...The string literals which stored with new keyword it wont be stored in string pool
4.Abstract class vs interface?
5.why while loop is used in binary search not do-while?
6.Auto boxing and Auto unboxing 
ex:System.out.println("The element" + searchElement +"is found at position" +(searchIndex+1))
The int value is converted into INTEGER Object in the INTEGER wrapper class and all wrapper classes are placed in java.lang 
7.Why initialization block is constructed?
8.stack overflow vs infinity loop?





---------------------------------------------------
1. Real life Examples for aggregation and Composition.

2. Problem on Loops:
Retail Shopping Application with Enhanced Rules.

You are tasked with developing a retail shopping application for generating itemized invoices, applying business rules for discounts, surcharges, and quantities, and providing a seamless customer experience.

The application unfolds across levels, each introducing new functionality, culminating in a complete solution that includes invoice generation and a breakdown of purchases.

Levels:
Level 1: Basic Item Entry and Total Calculation
Objective: Allow the user to input item details (code, description, quantity, price) and calculate the total cost for the item.

Key Steps:
1. Accept item code, description, quantity, and price.
2. Compute the total for a single item.
3. Display the total for the item.

Level 2: Iterative Item Entry and Grand Total
Objective: Enable multiple items to be added iteratively, and compute the grand total for all items.

Key Steps:
1. Use a loop to accept details for multiple items.
2. Compute the grand total by summing individual totals.
3. Display the grand total after all items have been entered.

Level 3: Applying Discounts and Surcharges
Objective: Introduce business rules for modifying the grand total based on conditions.

Rules Implemented:
1. Discount: If the grand total exceeds ₹10,000, apply a 10% discount.
2. Surcharge: If the grand total is less than ₹1,000 and payment is by card, apply a 2.5%
surcharge.
3. Quantity Discount: If the total quantity exceeds 20, apply an additional 5% discount on the
grand total (after other discounts).

Key Steps:
1. Check conditions for discounts and surcharges.
2. Adjust the grand total accordingly.
3. Display the modified total with adjustments explained.

Level 4: Membership Discounts
Objective: Introduce a membership system where customers get an additional discount.

Rules Implemented:
1. If the customer is a member (choice: 'y'), apply an additional 2% discount on the grand total
after all other adjustments.

Key Steps:
1. Prompt the user for membership status.
2. Apply the membership discount if applicable.
3. Update and display the final grand total.

3.Write the program to print prime numbers between m and n(m<n)
4.Write a program to print the Nth fibo term,assume 1 and 2 as 1st 2 terms repectively
5.Print the nth term if the series: 1 2 3 3 5 5 7  8 11 13 13

------------
//18/6/25//
1.balancing and existing tree
refers to converting an unbalanced binary search tree (BST) into a balanced BST to improve performance
2.take the date class ,print the number of seconds for one execution of while loop and also recursive call

//19/6/25 //
1.implement stack using ArrayList
2.write a 2x4 matrix of numbers
3.write a 4x4 matrix of strings each having 2 letters

//20/6/25//
