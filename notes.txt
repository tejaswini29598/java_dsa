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
git clone https://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@github.com/tejaswini29598/java_dsa
Minimum one branch is created when we create a repository
steps and commands:
place a document file in the java_dsa folder
here i placed Notes.txt
1. ask the git to list down all the files that nedd to be pushed(uploaded)

$git add path
$git add C:/learning/java_dsa
$git add .

2. push (upload)
$ git push origin main
$ git push (Always pushes to main branch)

3. Ask the git to create a secured object in which all the files to pushed are copied
$git commit -m "java dsa notes added"

To check the status of the repository
$ git status

now open the java_dsa in vs code

To create project in eclipse:
file -> new -> project -> java Project
in the dialogue box (new window)
de-select the module.java check box
enter the project name(practice) and click finish

now in explorer, expand the project folder
now right click  src folder -> create -> new -> package
give the package name "day1"

right click  "day1" in explorer (under src folder), create -> class
class name "HelloWorld" 

Primitives types in java
    Numeric:
	  number only
		byte
		short
		int 
		long
	  number with precision/ accuracy
	  float
	  double
	Char
    Boolean	
ARITHMETIC OPERATORS:
+ - * / %

// 11/06/25 //

All the operators take 2 operands/inputs
Hence, All are binary operators
The expression is written using "INFIX" notation
55 + 5
inputs are numbers
output is also a number
5+8/9 The division must be evaluated first because of the BODMAS rule
All arithmetic operators hava left to right associtivity
The "INFIX" expression is what we uses but it will be first converted to "POSTFIX" expression and only then it will get evaluated

int num=45;
00000000 00000000 00000000 00101101 //It is decimal to binary conversion how the 45 number is stored in memory

int num= -45;
00101101 // it is the binary value of the 45
11010010 // 1's compliment
11010011 // 2's compliment
now -1 * 2(7) + 1* 2(6) + 1 * 2(4) + 3
-128+64+16+3
-64+19
-45

float num = 5.5; // it is considered as double
therefore float num =5.5f; // considered as float

C++ inherited C

sum = 5 + 5.5;
when the expression has different types of values , then the lower type value will be changed to higher type
this is because the data must not be lost
-----------------------------------------------------------------------

Relational Operators:
> < >= <= != == 
input has numbers
output is Boolean
All are binary operators
used with infix notation
has lesser precedence than arithmetic operators
has higher precedence than logical operators

for i from 1 to n do:
for(int i=1;i<=n;i++)
  or for(int i=1;i<n+1;i++)

(10,40) //closed interval from 10 to 40
(20,30) //open interval from 21 to 29
(35,65) //right open interval from 35 to 64

//assembly language is stored in .esm

i=10;
j=5;
i++; j--;
a[i] =b[j];
b[j]--;

i=10;
j=5;
a[++i] =b[--j]--;
---------------------------------------------------------

logical operators
& &&  | || !
input has boolean 
output is Boolean
All are binary operators except !
used with infix notation
has lesser precedence than arithmetic operators and relational operators
has higher precedence than assignment operators

All the programming files are stored in secondary memory(disk)
files are loaded using "MACROS"(preprocessive directives (#include))
.(dot operator) //left to right associtivity
object.field 
--------------------------------------------------------
java program structure  SUN Microsystems (Standford University Network Microsystems)
oops: abstraction,polymorphism,inheritance,encapsulation
Disadvantages of C++:-
1.main() must be global function
2.global functions were allowed, thus the solutions(apps,software) created with neither procedural or object oriented
3.global variables are still allowed in C++
4.files are loaded using macros and stored till end of the program
5.pointers are always a mess to many programmers
6.The onus(responsibility) of creating and deleting objects in the heap is on programmer
7.the inheritance is by default private which makes the accessing the inherited properties is very difficult. In java it is public inheritance
8.Multiple inheritance creates a solution which is low cohensive
9.The operator overloading concept can be used to just Implementanything which is necessary
10.The compiler created object file which is environment(OS) restircted/dependent/specific.
11.Handling run time errors is difficult
12.objects can be created in stach area as well

In java:(The Disadvantages of C++ have the solution in Java)
1.No global functions, All are only methods (methods vs functions)
Strict object oriented solution.Therefore no concept of global variables
2.signed and unsigned removed thus the primitive datatypes are simplified.
3.libraries can be loaded and used dynamically(no pre process)
4.pointers are abstracted and users are given references.
5.All objects are created in heap only
6.array is an object in java
7.creating object is the only job the programmer does. object deletion is automated with the concept of GARBAGE COLLECTION.
8.the inheritance is by default public thus doesnot make implementation very easy
9.no multiple inheritance
10.all classes are always high cohensive
11.the only operator can be overloaded is + and only for string concatenation
12.The complier creates a byte code which is environment(OS) independent
13.handling runtime errors is easy via exception handling
14.friend concept is removed thus no more ambiguity and complexity in classes
-----------------------------------------------------------------------------------
Different stages of a program
C++ is fast than java during runtime and python is the slowest among all
The code area has the bytecode i.e .class files
static/class vars are stored in GDS
local vars and function parameters ,return address and method address(linkage) are stored in stack area
all objects(instance variables) are stored in heap(dynamically allocated memory)
The creation of objects are done only in runtime and the memory allocation is done also in runtime(dynamic runtime or memory allocation) and in compile time it thinks can i allocate the memory
----------------------------------------------------------------------------------
git add .
git status
git commit -m "assignments file added and notes updated"
git push
------------------------------------------------------------------------------------
1z0-829/1z0-830 java certificaitons 15000/-
study official documentations
NPTEL certificaitons
c-DAC govt of india
---------------------------------------------------------------------------
No function overloading in python
cases of writinig the code(pascal,snake,camel)

//12/6/25 LG Placement exam//

//13/6/25//
void ,static methods

When an object is created during the runtime , first the control goes to declarative statement, secondly it goes to instance initializer block(un-named block). If it is present , then it goes into the respective constructor.
All local variables in java are not initialized until it is initialized by the programmer. Thus the local variables will be empty if they are not initialized. the first assignment to the local variable is its initialization.
Unlike the local variables, the instance variables and the static(class) variables have default values.
byte,short,int and long instance variables hava 0 as the default values
float - 0.0f , double - 0.0
boolean instance or static variable - false
and if the instance or static variable is a reference type, then its default value will be null (ex:String)

The super() in the constructor will make call to immediate parent class constructor and this call happens right are PROLOG of the child class constructor.
We can optionally pass args to super(). However in such a case

without the input statements all the classes of java.lang are always automatically loaded..
The System.in,System.out,System.err are inside the java.lang package and here in,out and err are the static reference variables of the System class
public final class System{
public static final PrintStream out; ---It is the declaration of the out
static{
	out=new PrintStream();
}
}

final variable:
A variable once it is initialized(first assignment) cannot be muted.Thus final variables are read only variables. A final variable can be both static and non-static
A final class cannot be inherited/extended and a final method is one which cannot be overriden in the derived class


1.check if the given positive integer is a perfect square
2.exam result percentage
3.Tax calculation problem
i/p data :name of the employee,basic salary
HRA 15% of basic if employee lives in cosmopolitian city, urban city 10%

//14/6/25//
always use single-responsibility principle because using 2 problem solutions at a time ,it will consume more time 
JVM-Most important program in JRE,SM,MM,GC(Garbage Collector),BV,LL-all together work under JRE
1. public static void main(String[] args):-
In java main() called by OS(JVM) and it does return any value thats why it is void 
Static - the main method belongs to the class itself, rather than to any specific object of that class.
public because it is called by the JVM to access the member of the class in some other package
java is the parent most package in java and Object is the parent most class in java

2. Why constructor has same name as class name and do we hava a return type of java and does not it contain void?
Constructors have the same name as the class for clear identification and implicit invocation during object creation.The constructor has no return type and the constructor is implicitly void always

The threads are nothing but process which run inside the process simultaneously and it is a light-weight process
A process is a program in execution, meaning it's an active entity running on a computer. It has its own memory space, resources, and can't directly share these with other processes without specific mechanisms

Data structure:-
Storing data and also arranging/orgranizing it in memory in so specific way to archive some efficiency(space or time or simplicity) is data structure

1.find sum of the series 1-n+n2-n3...n terms 0<=n<=9 ,1 <=m<=25
2.find sum of odd digits of a number
2345=8(3+5)
3.find sum of even placed digits of a number
9128735=12(1+8+3)
91827364=10(1+2+3+4)
4.second largest and second smallest
consider an array of 5 elements for example, 4 5 3 2 1
here the second largest will be 4 and second smallest will be 2
sort the elements by Arrays.sort(); now it will become 1 2 3 4 5
consider for loop to make iterations
in for loop do the iterations upto n elements or n-1

5. Find sum of Odd placed Even Digits in a number. 
Note: You can make other 3 combinations for the above program.
6. Find smallest/biggest digit in a number.
7. Find sum of 1st and last digits in a number.
8. Find nth placed digit in a number
9. Count number of Prime digits in a number
10. Count number of composite digits in a number.
-----------------------------------------------------------
1. Write a program to print Right angled TRiangle of N lines.
2. Write a program to print Square of N lines.
3. Write a program to print Hollow Square of N lines.
4. Write a program to print X shape of N lines.
5. Write a program to print X shape inside a hollow square of N lines.
6. Write a program to print Hollow Benzene Ring of N lines.
Arrays:-
An array is a DS in which the elements of the array are stored in continous memory locations(There is no gap between 2 consecutive elements in an array).
All elements of an array are of the same DATATYPE(same size).
Array in java is an object because the objects has the array itself and also the length variable in it.
Once the size of an array is fixed, it cannot be changed.
To delete an array ,just make the reference null
It is a memory inefficient datastructures ,time efficient and its lookup is O(1)
simple and primary data structure
Creating:
int array[10]; //error
int[] array = new int[size];
int[] array =new int[5]{1,2,3,4,5};//error
int[] array=new int[]{1,2,3,4,5};
int[] array ={1,2,3,4,5};

--------------------------------------------------------------------------------------------------------
WEEK-2
// 16/6/25 //

CONSTRUCTORS:
*It is called/invoked always implicitly (by the JVM) as soon as an object is created(Objects get memory allocation,that means objects reference values is created).
*The object must have same name as that of the class so that the compiler/JVM knows which of the non static methods in the class are the constructors.
*We can define more than one constructor for the class, thus all the constructors must have the same name and this onset is called as "function overloading".
*The job of the constructor is to initialize an object.
*A constructor cannot return a value ever. Thus its return type is always void. Now something which is always, in  programming must be implicit, because it is always well known. thus mentioning the returnn type for a constructor becomes redundant and hence there must be no return type to a constructor.
*A constructor cannot be static because a constructor is working for an object and it is always has "this". If it is static it should be work for class and not for the object.
* Constructor is usually(99% of the cases) is public.however,they can be private also.
*Constructor cannot be final because all constructors are always final by nature i.e suppose the constructor is overriden in the sub class,and we create an object of the base class, the overriden constructor in the subclass becomes always unreachable.
*The constructor cannot be overriden 
*Constructors cannot be abstract(becuase the abstract methods are not declared but defined) becuase first of all a class choose instance method is abstract its object cannot be created. Further, even if the constructor is defined in the derived class, we know it is unreachable.
Ex: Assume there is a class named "Flight"
Filght(){

}
Flight(String code){

}
main(){ //assume this is the main method
Flight flight = new Flight(); // In this it calls the zero argumented constructor is called, this is called as "STATIC BINDING/COMPILE TIME BIDING/EARLY TIME BINDING"(it decides which function should be called/invoked at the compile stage).
}

FUNCTION OVERLOADING:
*It is the compile time(static/early) bindng/polymorphism which of the overloaded methods must be called is decided by the compiler.
*The overloaded methods if have the same arguments list but different return types then it is an error, because the change must be present at prologue and if the change is only present at apilogue.
*The overloaded functions/methods must differ in their argument list either by number of arguments or datatypes of the arguments or if incase if both the number of arguments and their types are the same the the order must be different.

RELATIONS IN OOPS:
the diagrams that will show the relations called "UML Diagrams" and the diagrams which shows the entry and exit loops and conditions are called "Cyclomatic diagrams"
1.Generalization(inheritance)- "is-a" type of relationship
2.Association - "has-a" part of
--Aggregation (weak or optional association)
--Composition(Strong association)

*Inheritance: suv is a car is-a vehicle
*Aggregation: When the whole object existance is independent of the part object then it is aggregation. When the part object(containee) and the whole object(container) can exist independent of each other.
*Composition: when the whole object existence is dependent on the part of the object existance. When the containee and container cannot exist independent of eachother.
Real life example

why the main() method is static?
definition means the data defined between{ }

ABSTRACT CLASS:
* A class which has at least one abstract method must be marked as abstract
* A class having all methods defined can also be abstract.
* A class having all methods abstract(Except constructors) is said to be 100% abstract
* The derived class which inherits an abstract class can be a concrete class itself doesnot declares any abstract method.
* If the derived class fails to define anyone of the abstract methods of the parent class then it itself must be marked as abstract
* An abstract class can still be used via its static memebers
-----------------------------------------------------------
no super keyword in c++ instead we use ::
-----------------------------------------
create a class to which only one object can be created:
1.for that we have to make all the constructors private but the User can create only one object inside the function
2.The user can access the method when it is public static
3.final A1 a1 = new A1();

public class A1{

}
public class User{
	A1 a1= new A1();
	A1 a2 =new A1();
}
Ex2:
 
//Create a class to which only one onject can be created:

public class A1 {

}
public class User {
	A a1 = new A();
	A a2 = new A();
}


import java.util.Scanner;

class Person {
    private int id;
    private String name;
    private char gender;
    private String location;
    private static Person person; //person is the reference to the Person
    
    private Person() {
        System.out.println("Person object is created");
    }
    
    public static Person createPerson() {
        if (person == null) {
            person = new Person();
        }
        return person;
    }
    
    public void setPerson(int id, String name, char gender, String location) {
        this.id = id;
        this.name = name;
        this.gender = gender;
        this.location = location;
    }
    
    @Override
    public String toString() {
        return "Person Details = Id:" + id + ", Name:" + name +
         ", Gender:" + gender + ", Location:" + location;
    }
}

public class Singleton {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Person person1 = Person.createPerson();
        person1.setPerson(101, "nithin", 'm', "mysuru");
        System.out.println(person1); // System.out.print(person.toString());
        
        Person person2 = Person.createPerson();
        System.out.println(person2); // System.out.print(person.toString());
        person2.setPerson(102, "aadya", 'f', "mysuru");
        System.out.println(person1); // System.out.print(person.toString());
    }
}


//17/6/25//
*which string objects in java are not stored in string pool(String pool is a storage space in the Java heap memory where string literals are stored)
...The string literals which stored with new keyword it wont be stored in string pool

//Orange partition
n=9 [18,36,5,79,50,65,30,15,33]
n=7 [15,23,5,30,40,50,55]
n=6 [50,40,35,30,20,15]


The packages only have code but in the folders we have different formats of files